//import org.jetbrains.changelog.date

plugins {
  id 'java'
  id 'org.jetbrains.intellij' version '0.6.5'
  id 'org.jetbrains.changelog' version '0.6.2'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'org.jetbrains.changelog'

group pluginGroup
version pluginVersion

sourceCompatibility = '11'

repositories {
  mavenCentral()
}

test {
  useTestNG()
  useJUnit()
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

intellij {
  // see https://www.jetbrains.com/intellij-repository/releases/
  // and https://www.jetbrains.com/intellij-repository/snapshots/
  // To use/download EAP add '-EAP-SNAPSHOT' to the version, i.e. 'IU-191.6014.8-EAP-SNAPSHOT'
  version platformVersion
//  version 'IC-203.5981.114-EAP-SNAPSHOT'
  plugins[]
  pluginName pluginName_

  patchPluginXml {
    changeNotes({ changelog.getUnreleased().toHTML() })
  }

  // TODO (https://youtrack.jetbrains.com/issue/IDEA-252693) - Disabled this task because it was failing. See my
  //      comment on the above YouTrack issue, and thread here: https://jetbrains-platform.slack.com/archives/C5U8BM1MK/p1604722479347300?thread_ts=1602338567.267100&cid=C5U8BM1MK
  // Note: This gradle task is only needed if `SearchableConfigurable` is used,
  //       not `Configurable`.
  //       See the following comment for details: https://jetbrains-platform.slack.com/archives/C5U8BM1MK/p1606813009234800?thread_ts=1606794793.231900&cid=C5U8BM1MK
  buildSearchableOptions {
    enabled = false
  }
}

changelog {
  version = "${project.version}"
  path = "${project.projectDir}/CHANGELOG.md"
//  header = { "[${project.version}] - ${date()}" }
  header = { "[${project.version}] - ${new Date().format('yyyy-MM-dd')}" }
  headerParserRegex = ~/\d+\.\d+\.\d+/
  itemPrefix = "-"
  keepUnreleasedSection = true
  unreleasedTerm = "[Unreleased]"
  groups = ["Added", "Changed", "Deprecated", "Removed", "Fixed", "Security"]
}

//runIde {
//    jbrVersion 'jbrex8u202b1483.21'
//}

// The below will surface warnings as errors - I want
// this in the project to allow us to catch deprecation
// notices early and often.
tasks.withType(JavaCompile) {
  options.compilerArgs.addAll(['-Xlint:all',
                               '-Xlint:-options',
                               '-Xlint:-rawtypes',
                               '-Xlint:-processing',
                               '-Xlint:-path', // Ignore JBR SDK manifest element warnings
                               '-proc:none',
                               '-Werror',
                               '-Xlint:-classfile']) //ignore warnings from dependencies
}

if (System.getenv('CI') != "true") {
  // The below file (jetbrainsCredentials.gradle) should contain the below:
  //    project.ext.set("intellijPublishUsername", "YOUR_USERNAME_HERE")
  //    project.ext.set("intellijPublishPassword", "YOUR_PASSWORD_HERE")
  //    project.ext.set("intellijPluginPublishToken", "YOUR_TOKEN_HERE")
  //
  // Because this contains the username and password, this file is also included in .gitignore file.
  apply from: 'jetbrainsCredentials.gradle'

  publishPlugin {
//    username intellijPublishUsername
//    password intellijPublishPassword
    token intellijPluginPublishToken
  }

  task checkJetBrainsCreds {
    doLast {
      println "Username: " + intellijPublishUsername
      println "Password " + (project.hasProperty('intellijPublishPassword') ? "IS" : "is NOT") + " set."
    }
  }
}
